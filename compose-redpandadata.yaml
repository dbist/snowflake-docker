name: redpanda-demo
volumes:
  redpanda: null
services:
  redpanda:
    hostname: redpanda
    container_name: redpanda
    image: redpandadata/redpanda:latest
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr localhost:8082
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 29092:29092
    volumes:
      - redpanda:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
  console:
    image: redpandadata/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        connect:
          enabled: true
          clusters:
            - name: kafka-connect
              url: http://kafka-connect:8083
    ports:
      - "8080:8080"
    depends_on:
      - redpanda

  kafka-connect:
    build: confluent-kafka-connect/.
    hostname: kafka-connect
    container_name: kafka-connect
    environment:
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
    entrypoint: ["tail", "-f", "/dev/null"]
    volumes:
      - ./confluent-kafka-connect/configuration/:/home/appuser/
      - /Users/aervits/Documents/blogs/pandabooks_integration/kafka_2.13-3.8.0/:/home/appuser/kafka-connect/
    ports:
      - 8083:8083
    depends_on:
      - redpanda